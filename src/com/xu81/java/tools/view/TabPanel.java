/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.xu81.java.tools.view;

import com.xu81.java.tools.model.ConnectionBean;
import com.xu81.java.tools.util.DBEngine;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeNode;
import org.apache.commons.lang3.StringUtils;

/**
 *
 * @author Administrator
 */
public class TabPanel extends javax.swing.JPanel {

    /**
     * Creates new form TabPanel
     */
    public TabPanel() {
        this(null, null, null);
    }

    public TabPanel(List<String> dbs, Map<String, Set<String>> colls, final ConnectionBean cb) {
        initComponents();
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(cb.getServer());
        JTree dbTree = new JTree(root);
        dbTree.setEditable(false);
        if (StringUtils.isEmpty(cb.getDbName())) {
            for (String db : dbs) {
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(db);
                Iterator<String> iter = colls.get(db).iterator();
                while (iter.hasNext()) {
                    DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(iter.next());
                    node.add(leaf);
                }
                root.add(node);
            }
        } else {
            DefaultMutableTreeNode node = new DefaultMutableTreeNode(cb.getDbName());
            Iterator<String> iter = colls.get(cb.getDbName()).iterator();
            while (iter.hasNext()) {
                DefaultMutableTreeNode leaf = new DefaultMutableTreeNode(iter.next());
                node.add(leaf);
            }
            root.add(node);
        }
        dbTree.addTreeSelectionListener(new TreeSelectionListener() {

            @Override
            public void valueChanged(TreeSelectionEvent e) {
                TreeNode node = (TreeNode) e.getNewLeadSelectionPath().getLastPathComponent();
                if (node.isLeaf()) {
                    String collection = node.toString();
                    DBEngine engine = DBEngine.getInstance(cb);
                    List<Map<String, Object>> list = engine.findAll(node.getParent().toString(), collection);
                    String[] clumnNames = null;
                    Object[][] cellData = null;
                    int j = 0;
                    for (Map<String, Object> d : list) {
                        if (clumnNames == null) {
                            Iterator<String> keys = d.keySet().iterator();
                            clumnNames = new String[d.keySet().size()];
                            int i = 0;
                            while (keys.hasNext()) {
                                clumnNames[i] = keys.next();
                                i++;
                            }
                        }
                        if (cellData == null) {
                            cellData = new Object[list.size()][d.keySet().size()];
                        }
                        int k = 0;
                        for (String clumnName : clumnNames) {
                            cellData[j][k] = d.get(clumnName);
                            k++;
                        }
                        j++;
                    }
                    JTable table = new JTable(cellData, clumnNames);
                    table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                    tablePanel.setViewportView(table);
                }
            }
        });
        treePanel.setViewportView(dbTree);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEditor = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        toolsPanel = new javax.swing.JPanel();
        btnSaveData = new javax.swing.JButton();
        tablePanel = new javax.swing.JScrollPane();
        treePanel = new javax.swing.JScrollPane();

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(200, 150));

        txtEditor.setColumns(20);
        txtEditor.setRows(5);
        jScrollPane2.setViewportView(txtEditor);
        txtEditor.getAccessibleContext().setAccessibleName("tabEditor");

        jSplitPane2.setTopComponent(jScrollPane2);

        btnSaveData.setText("save");

        javax.swing.GroupLayout toolsPanelLayout = new javax.swing.GroupLayout(toolsPanel);
        toolsPanel.setLayout(toolsPanelLayout);
        toolsPanelLayout.setHorizontalGroup(
            toolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSaveData)
                .addContainerGap(298, Short.MAX_VALUE))
        );
        toolsPanelLayout.setVerticalGroup(
            toolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, toolsPanelLayout.createSequentialGroup()
                .addGap(0, 10, Short.MAX_VALUE)
                .addComponent(btnSaveData))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tablePanel)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(toolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel1);

        jSplitPane1.setRightComponent(jSplitPane2);
        jSplitPane2.getAccessibleContext().setAccessibleName("tabTable");

        jSplitPane1.setLeftComponent(treePanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        jSplitPane1.getAccessibleContext().setAccessibleName("tabTree");
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveData;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JScrollPane tablePanel;
    private javax.swing.JPanel toolsPanel;
    private javax.swing.JScrollPane treePanel;
    private javax.swing.JTextArea txtEditor;
    // End of variables declaration//GEN-END:variables
}
